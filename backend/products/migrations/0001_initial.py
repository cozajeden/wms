# Generated by Django 5.1.7 on 2025-03-19 22:10

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        ('suppliers', '0001_initial'),
        ('users', '0003_alter_customuser_role_alter_company_table'),
        ('warehouse', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_received', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_remaining', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('received', models.DateTimeField(auto_now_add=True)),
                ('expiration', models.DateTimeField()),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='suppliers.supplier')),
            ],
            options={
                'db_table': 'lot',
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.lot')),
            ],
            options={
                'db_table': 'batch',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('unit', models.CharField(max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.company')),
            ],
            options={
                'db_table': 'material',
            },
        ),
        migrations.AddField(
            model_name='lot',
            name='material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.material'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('unit', models.CharField(max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.company')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='ProductBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered_quantity', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('produced_quantity', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('lots', models.ManyToManyField(through='products.Batch', to='products.lot')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.warehouse')),
            ],
            options={
                'db_table': 'product_batch',
            },
        ),
        migrations.AddField(
            model_name='batch',
            name='product_batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.productbatch'),
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.warehouse')),
                ('lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.lot')),
            ],
            options={
                'db_table': 'inventory',
                'unique_together': {('warehouse', 'lot')},
            },
        ),
        migrations.CreateModel(
            name='BillOfMaterials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.material')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'db_table': 'bom',
                'unique_together': {('product', 'material')},
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('production_date', models.DateTimeField(auto_now_add=True)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.productbatch')),
            ],
            options={
                'db_table': 'item',
                'unique_together': {('serial_number', 'batch')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='batch',
            unique_together={('product_batch', 'lot')},
        ),
    ]
