name: Backend Tests

on:
    push:
        branches:
        - backend
    pull_request:
        branches:
        - main

jobs:
    backend-tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: backend
        permissions:
            contents: write
            packages: write
            pull-requests: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
                
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
              
            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
                
            - name: Build and Push Docker Image to GitHub Container Registry
              uses: docker/build-push-action@v5
              with:
                context: ./backend
                file: ./backend/Dockerfile
                push: true
                tags: ghcr.io/cozajeden/backend:latest
                cache-from: type=registry,ref=ghcr.io/cozajeden/backend:cache
                cache-to: type=registry,ref=ghcr.io/cozajeden/backend:cache,mode=max
                
            - name: Start containers
              run: docker compose -f docker-compose-test.yml up -d
              
            - name: Wait for services to start
              run: sleep 30
              
            - name: Run migrations
              run: docker compose -f docker-compose-test.yml exec -T backend python manage.py migrate
              
            - name: Run Pytest, check if coverage is at least 80%
              run: docker compose -f docker-compose-test.yml exec -T backend pytest --cov=.  --cov-fail-under=80
              
            - name: Stop containers
              run: docker compose -f docker-compose-test.yml down

            - name: Configure Git
              run: |
                git config --global user.name 'github-actions[bot]'
                git config --global user.email 'github-actions[bot]@users.noreply.github.com'

            - name: Merge main into current branch
              run: |
                git fetch origin main
                git merge origin/main --no-edit
                git push origin ${{ github.ref }}

            - name: Create Pull Request
              uses: peter-evans/create-pull-request@v5
              with:
                token: ${{ secrets.GITHUB_TOKEN }}
                branch: ${{ github.ref }}
                base: main
                title: 'Merge ${{ github.ref }} into main'
                body: |
                  This PR merges the tested ${{ github.ref }} branch into main.
                  All tests have passed successfully with coverage above 80%.
                draft: false
                delete-branch: false
