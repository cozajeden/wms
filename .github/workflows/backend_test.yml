name: Backend Tests

on:
    push:
        branches:
        - backend
        - main
    pull_request:
        branches:
        - main

jobs:
    backend-tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: backend
        permissions:
            contents: write
            packages: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
                
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
              
            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
                
            - name: Build and Push Docker Image to GitHub Container Registry
              uses: docker/build-push-action@v5
              with:
                context: ./backend
                file: ./backend/Dockerfile
                push: true
                tags: ghcr.io/cozajeden/backend:latest
                cache-from: type=registry,ref=ghcr.io/cozajeden/backend:cache
                cache-to: type=registry,ref=ghcr.io/cozajeden/backend:cache,mode=max
                
            - name: Start containers
              run: docker compose -f docker-compose-test.yml up -d
              
            - name: Wait for services to start
              run: sleep 30
              
            - name: Run migrations
              run: docker compose -f docker-compose-test.yml exec -T backend python manage.py migrate
              
            - name: Run Pytest, check if coverage is at least 80%
              run: docker compose -f docker-compose-test.yml exec -T backend pytest --cov=.  --cov-fail-under=80
              
            - name: Stop containers
              run: docker compose -f docker-compose-test.yml down
              
            - name: Merge to main
              if: github.ref == 'refs/heads/backend' && github.event_name == 'push'
              run: |
                git config --global user.name 'GitHub Actions'
                git config --global user.email 'github-actions@github.com'
                git fetch origin main
                git checkout main
                git merge origin/backend || {
                  echo "Merge failed. Creating pull request..."
                  gh pr create \
                    --title "Merge backend into main" \
                    --body "Automated PR to merge backend into main" \
                    --base main \
                    --head backend
                  exit 1
                }
                git push origin main
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
